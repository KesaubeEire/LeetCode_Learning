using System;using System.Collections;using System.Collections.Generic;using System.Linq;using System.Runtime.Hosting;namespace _537__Complex_Number_Multiplication{    internal static class Program    {        public static void Main(string[] args)        {            string a = "1+1i";            string b = "1+1i";            Console.WriteLine(complexNumberMultiply(a, b));        }        public static String complexNumberMultiply(String a, String b)        {            string A = a;//            Console.WriteLine(a.ToList().IndexOf('+'));//            Console.WriteLine(a.Length - a.ToList().IndexOf('+'));//            Console.WriteLine(a.ToList().IndexOf('+') + 1);            string prePlus_A = A.Remove(a.ToList().IndexOf('+'), a.Length - a.ToList().IndexOf('+'));            string afterPlus_A = A.Remove(0, a.ToList().IndexOf('+') + 1);            int preA = int.Parse(prePlus_A);            int afterA;            if (afterPlus_A == "0i") afterA = 0;            else            {                afterA = int.Parse(afterPlus_A.Remove(afterPlus_A.Length - 1, 1));            }//            Console.WriteLine("preA:\t" + preA);//            Console.WriteLine("afterA:\t" + afterA);            string B = b;            string prePlus_B = B.Remove(b.ToList().IndexOf('+'), b.Length - b.ToList().IndexOf('+'));            string afterPlus_B = B.Remove(0, b.ToList().IndexOf('+') + 1);            int preB = int.Parse(prePlus_B);            int afterB;            if (afterPlus_B == "0i") afterB = 0;            else            {                afterB = int.Parse(afterPlus_B.Remove(afterPlus_B.Length - 1, 1));            }//            Console.WriteLine("preB:\t" + preB);//            Console.WriteLine("afterB:\t" + afterB);            return (preA * preB - (afterA * afterB)).ToString() + "+" + (preA * afterB + preB * afterA).ToString() +                   "i";        }    }}/* *Given two strings representing two complex numbers.You need to return a string representing their multiplication. Note i2 = -1 according to the definition.Example 1:Input: "1+1i", "1+1i"Output: "0+2i"Explanation: (1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i, and you need convert it to the form of 0+2i.Example 2:Input: "1+-1i", "1+-1i"Output: "0+-2i"Explanation: (1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it to the form of 0+-2i.Note:The input strings will not have extra blank.The input strings will be given in the form of a+bi, where the integer a and b will both belong to the range of [-100, 100]. And the output should be also in this form. *  */  ///注意 Remove 是 index 和 count , 不是首尾 index